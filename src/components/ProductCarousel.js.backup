import React, { useState } from 'react';

function ProductCarousel({ products, onAddToCart, onViewProduct }) {
  const [currentIndex, setCurrentIndex] = useState(0);
  
  const nextSlide = () => {
    setCurrentIndex((prevIndex) => 
      prevIndex === products.length - 1 ? 0 : prevIndex + 1
    );
  };
  
  const prevSlide = () => {
    setCurrentIndex((prevIndex) => 
      prevIndex === 0 ? products.length - 1 : prevIndex - 1
    );
  };
  
  // Show 3 products at a time on desktop, 1 on mobile
  const visibleProducts = products.slice(currentIndex, currentIndex + 3);
  
  // If we're at the end and need to wrap around, add products from the beginning
  if (visibleProducts.length < 3) {
    const remaining = 3 - visibleProducts.length;
    visibleProducts.push(...products.slice(0, remaining));
  }
  
  return (
    <div className="relative w-full py-section-space-1">
      {/* Carousel container */}
      <div className="overflow-hidden">
        <div className="flex transition-transform duration-500 ease-in-out">
          {products.map((product, index) => (
            <div 
              key={`${product.id}-${index}`} 
              className="flex-shrink-0 w-full md:w-1/3 px-3"
              style={{ transform: `translateX(-${currentIndex * 100}%)` }}
            >
              <div 
                className="product-card-hover cursor-pointer bg-background-white rounded-xl border border-border-gray p-6"
                onClick={() => onViewProduct(product.id)}
              >
                {/* Image container with fixed aspect ratio - exactly 72px height as per PRD */}
                <div className="w-full flex items-center justify-center bg-warm-gray rounded-lg mb-4" style={{ height: '72px' }}>
                  <img 
                    src={product.image} 
                    alt={product.name} 
                    className="object-cover w-full h-full rounded-lg"
                  />
                </div>
                
                {/* Product info with refined typography */}
                <div className="flex flex-col">
                  <h3 className="text-product-title text-secondary-black font-medium mb-2 tracking-[0.25px] leading-tight truncate">
                    {product.name}
                  </h3>
                  <p className="text-product-price text-secondary-black font-semibold tracking-tight mb-4">
                    ${product.price.toFixed(2)}
                  </p>
                  <button 
                    onClick={(e) => {
                      e.stopPropagation();
                      onAddToCart(product);
                    }}
                    className="w-full py-3 px-4 bg-primary-black text-background-white text-base font-medium rounded-lg hover:bg-secondary-black transition-all duration-200"
                  >
                    Add to Cart
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      {/* Navigation arrows - using Lucide icons as per PRD */}
      <button 
        onClick={prevSlide}
        className="absolute left-0 top-1/2 -translate-y-1/2 -translate-x-4 bg-white/90 backdrop-blur rounded-full p-2 shadow-md hover:shadow-lg transition-all duration-200 border border-border-gray"
      >
        <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-secondary-black" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
        </svg>
      </button>
      
      <button 
        onClick={nextSlide}
        className="absolute right-0 top-1/2 -translate-y-1/2 translate-x-4 bg-white/90 backdrop-blur rounded-full p-2 shadow-md hover:shadow-lg transition-all duration-200 border border-border-gray"
      >
        <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-secondary-black" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
        </svg>
      </button>
      
      {/* Dots indicator - 8px diameter dots as per PRD */}
      <div className="flex justify-center mt-6 space-x-3">
        {products.map((_, index) => (
          <button
            key={index}
            onClick={() => setCurrentIndex(index)}
            className={`w-2 h-2 rounded-full transition-all duration-200 ${
              index === currentIndex ? 'bg-primary-black' : 'bg-cool-gray'
            }`}
          />
        ))}
      </div>
    </div>
  );
}

export default ProductCarousel;